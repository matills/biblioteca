@model Biblioteca.Models.Prestamo

@{
    ViewData["Title"] = "Nuevo Préstamo";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h4 class="mb-0"><i class="fas fa-plus"></i> @ViewData["Title"]</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="All" class="text-danger mb-3"></div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="UsuarioId" class="form-label fw-bold">Usuario</label>
                                    <select asp-for="UsuarioId" class="form-select" asp-items="@(ViewData["UsuarioId"] as SelectList)">
                                        <option value="">-- Seleccionar Usuario --</option>
                                    </select>
                                    <span asp-validation-for="UsuarioId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="LibroId" class="form-label fw-bold">Libro</label>
                                    <select asp-for="LibroId" class="form-select" asp-items="@(ViewData["LibroId"] as SelectList)" onchange="verificarDisponibilidad()">
                                        <option value="">-- Seleccionar Libro --</option>
                                    </select>
                                    <span asp-validation-for="LibroId" class="text-danger"></span>
                                    <div id="disponibilidadInfo" class="form-text"></div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="FechaPrestamo" class="form-label fw-bold">Fecha de Préstamo</label>
                                    <input asp-for="FechaPrestamo" class="form-control" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                                    <span asp-validation-for="FechaPrestamo" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="FechaDevolucionEsperada" class="form-label fw-bold">Fecha de Devolución Esperada</label>
                                    <input asp-for="FechaDevolucionEsperada" class="form-control" type="date" value="@DateTime.Now.AddDays(15).ToString("yyyy-MM-dd")" />
                                    <span asp-validation-for="FechaDevolucionEsperada" class="text-danger"></span>
                                    <div class="form-text">Por defecto: 15 días desde hoy</div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Observaciones" class="form-label fw-bold">Observaciones</label>
                            <textarea asp-for="Observaciones" class="form-control" rows="3" 
                                      placeholder="Observaciones adicionales sobre el préstamo..."></textarea>
                            <span asp-validation-for="Observaciones" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Volver
                            </a>
                            <button type="submit" class="btn btn-success" id="btnGuardar">
                                <i class="fas fa-save"></i> Crear Préstamo
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .btn-success {
        background: linear-gradient(45deg, #28a745, #20c997);
        border: none;
    }
    
    .btn-secondary {
        background: linear-gradient(45deg, #6c757d, #495057);
        border: none;
    }
    
    .btn-success:hover, .btn-secondary:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    
    .card {
        border: none;
        border-radius: 15px;
    }
    
    .card-header {
        border-radius: 15px 15px 0 0 !important;
    }
    
    .form-control, .form-select {
        border-radius: 10px;
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #28a745;
        box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
    }
    
    .form-label {
        color: #495057;
        margin-bottom: 0.5rem;
    }
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function verificarDisponibilidad() {
            const libroId = document.getElementById('LibroId').value;
            const infoDiv = document.getElementById('disponibilidadInfo');
            
            if (!libroId) {
                infoDiv.innerHTML = '';
                return;
            }
            
            infoDiv.innerHTML = '<span class="text-info"><i class="fas fa-spinner fa-spin"></i> Verificando disponibilidad...</span>';
            
            fetch('/Prestamos/VerificarDisponibilidadLibro?libroId=' + libroId)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error en la respuesta del servidor');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.disponible) {
                        infoDiv.innerHTML = '<span class="text-success"><i class="fas fa-check-circle"></i> Disponible (' + data.cantidadDisponible + ' copias)</span>';
                    } else {
                        infoDiv.innerHTML = '<span class="text-danger"><i class="fas fa-times-circle"></i> No hay copias disponibles</span>';
                    }
                })
                .catch(error => {
                    infoDiv.innerHTML = '<span class="text-warning"><i class="fas fa-exclamation-triangle"></i> Error al verificar disponibilidad</span>';
                });
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            const libroSelect = document.getElementById('LibroId');
            if (libroSelect && libroSelect.value) {
                verificarDisponibilidad();
            }
        });
    </script>
}
