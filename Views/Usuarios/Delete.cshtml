@model Biblioteca.Models.Usuario

@{
    ViewData["Title"] = "Eliminar Usuario";
    var prestamosActivos = Model.Prestamos.Where(p => p.Estado == "Activo").ToList();
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-danger text-white">
                    <h4 class="mb-0"><i class="fas fa-user-times"></i> @ViewData["Title"]</h4>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning">
                        <h5><i class="fas fa-exclamation-triangle"></i> ¿Está seguro de que desea eliminar este usuario?</h5>
                        <p class="mb-0">Esta acción no se puede deshacer y eliminará toda la información del usuario.</p>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="text-primary mb-3"><i class="fas fa-user"></i> Información del Usuario</h6>
                            <div class="mb-2">
                                <strong>Nombre:</strong> @Html.DisplayFor(model => model.Nombre)
                            </div>
                            <div class="mb-2">
                                <strong>Email:</strong> @Html.DisplayFor(model => model.Email)
                            </div>
                            <div class="mb-2">
                                <strong>Teléfono:</strong> @Html.DisplayFor(model => model.Telefono)
                            </div>
                            @if (!string.IsNullOrEmpty(Model.Direccion))
                            {
                                <div class="mb-2">
                                    <strong>Dirección:</strong> @Html.DisplayFor(model => model.Direccion)
                                </div>
                            }
                            <div class="mb-2">
                                <strong>Fecha de Registro:</strong> @Model.FechaRegistro.ToString("dd/MM/yyyy")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h6 class="text-primary mb-3"><i class="fas fa-chart-bar"></i> Estadísticas de Préstamos</h6>
                            <div class="row">
                                <div class="col-6">
                                    <div class="card bg-success text-white text-center">
                                        <div class="card-body py-2">
                                            <h5>@prestamosActivos.Count</h5>
                                            <small>Activos</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="card bg-warning text-white text-center">
                                        <div class="card-body py-2">
                                            <h5>@Model.Prestamos.Count(p => p.Estado == "Vencido")</h5>
                                            <small>Vencidos</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-6">
                                    <div class="card bg-info text-white text-center">
                                        <div class="card-body py-2">
                                            <h5>@Model.Prestamos.Count(p => p.Estado == "Devuelto")</h5>
                                            <small>Devueltos</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="card bg-primary text-white text-center">
                                        <div class="card-body py-2">
                                            <h5>@Model.Prestamos.Count</h5>
                                            <small>Total</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (prestamosActivos.Any())
                    {
                        <div class="alert alert-danger mt-4">
                            <h6><i class="fas fa-ban"></i> No se puede eliminar este usuario</h6>
                            <p>El usuario tiene <strong>@prestamosActivos.Count préstamo(s) activo(s)</strong>. Debe devolver todos los libros antes de poder eliminar el usuario.</p>
                            
                            <h6 class="mt-3">Préstamos activos:</h6>
                            <ul class="mb-0">
                                @foreach (var prestamo in prestamosActivos)
                                {
                                    <li>
                                        <strong>@prestamo.Libro.Titulo</strong> - 
                                        Vence: @prestamo.FechaDevolucionEsperada.ToString("dd/MM/yyyy")
                                        @if (prestamo.FechaDevolucionEsperada < DateTime.Now)
                                        {
                                            <span class="badge bg-warning ms-2">VENCIDO</span>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                    else if (Model.Prestamos.Any())
                    {
                        <div class="alert alert-info mt-4">
                            <h6><i class="fas fa-info-circle"></i> Historial de préstamos</h6>
                            <p>Este usuario tiene un historial de <strong>@Model.Prestamos.Count préstamo(s)</strong>, pero no tiene préstamos activos.</p>
                            <p class="mb-0"><strong>Nota:</strong> Al eliminar el usuario, también se eliminará su historial de préstamos.</p>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-success mt-4">
                            <h6><i class="fas fa-check-circle"></i> Usuario sin préstamos</h6>
                            <p class="mb-0">Este usuario no tiene préstamos registrados y puede ser eliminado sin problemas.</p>
                        </div>
                    }

                    <form asp-action="Delete" method="post" class="mt-4">
                        <input type="hidden" asp-for="UsuarioId" />
                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Volver
                            </a>
                            @if (!prestamosActivos.Any())
                            {
                                <button type="submit" class="btn btn-danger" onclick="return confirm('¿Está completamente seguro de eliminar este usuario y todo su historial?')">
                                    <i class="fas fa-trash"></i> Confirmar Eliminación
                                </button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-danger" disabled>
                                    <i class="fas fa-ban"></i> No se puede eliminar
                                </button>
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .btn-danger {
        background: linear-gradient(45deg, #dc3545, #c82333);
        border: none;
    }
    
    .btn-secondary {
        background: linear-gradient(45deg, #6c757d, #495057);
        border: none;
    }
    
    .btn-danger:hover, .btn-secondary:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    
    .card {
        border: none;
        border-radius: 15px;
    }
    
    .card-header {
        border-radius: 15px 15px 0 0 !important;
    }
</style>
