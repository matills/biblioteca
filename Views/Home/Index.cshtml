@{
    ViewData["Title"] = "Dashboard - Sistema de Biblioteca";
}

<div class="container-fluid mt-4">
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="text-primary mb-0">
                        Tu Biblioteca
                    </h1>
                    <p class="text-muted">Panel de control y estadísticas del sistema</p>
                </div>
                <div>
                    <a asp-action="GenerarReporte" class="btn btn-lg btn-outline-primary">
                        <i class="fas fa-file-download"></i> Generar Reporte Excel
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="me-3">
                            <i class="fas fa-book fa-2x"></i>
                        </div>
                        <div>
                            <h3 class="mb-0">@ViewBag.TotalLibros</h3>
                            <small>Total de Libros</small>
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-primary border-0">
                    <a asp-controller="Libros" asp-action="Index" class="text-white text-decoration-none">
                        <small><i class="fas fa-arrow-right"></i> Ver todos los libros</small>
                    </a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card bg-success text-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="me-3">
                            <i class="fas fa-users fa-2x"></i>
                        </div>
                        <div>
                            <h3 class="mb-0">@ViewBag.TotalUsuarios</h3>
                            <small>Usuarios Registrados</small>
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-success border-0">
                    <a asp-controller="Usuarios" asp-action="Index" class="text-white text-decoration-none">
                        <small><i class="fas fa-arrow-right"></i> Ver todos los usuarios</small>
                    </a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card bg-warning text-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="me-3">
                            <i class="fas fa-hand-holding fa-2x"></i>
                        </div>
                        <div>
                            <h3 class="mb-0">@ViewBag.PrestamosActivos</h3>
                            <small>Préstamos Activos</small>
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-warning border-0">
                    <a asp-controller="Prestamos" asp-action="Index" asp-route-filtro="activos" class="text-white text-decoration-none">
                        <small><i class="fas fa-arrow-right"></i> Ver préstamos activos</small>
                    </a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card bg-danger text-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="me-3">
                            <i class="fas fa-exclamation-triangle fa-2x"></i>
                        </div>
                        <div>
                            <h3 class="mb-0">@ViewBag.PrestamosVencidos</h3>
                            <small>Préstamos Vencidos</small>
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-danger border-0">
                    <a asp-controller="Prestamos" asp-action="Index" asp-route-filtro="vencidos" class="text-white text-decoration-none">
                        <small><i class="fas fa-arrow-right"></i> Ver préstamos vencidos</small>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-star"></i> Libros Más Prestados
                    </h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.LibrosMasPrestados != null && ((IEnumerable<(Biblioteca.Models.Libro Libro, int TotalPrestamos)>)ViewBag.LibrosMasPrestados).Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var item in (IEnumerable<(Libro Libro, int TotalPrestamos)>)ViewBag.LibrosMasPrestados)
                            {
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div>
                                        <h6 class="mb-0">@item.Libro.Titulo</h6>
                                        <small class="text-muted">por @item.Libro.Autor?.Nombre</small>
                                    </div>
                                    <span class="badge bg-primary">@item.TotalPrestamos préstamos</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-book fa-2x text-muted mb-2"></i>
                            <p class="text-muted">No hay datos de préstamos aún</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-user-star"></i> Usuarios Más Activos
                    </h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.LibrosMasPrestados != null && ((IEnumerable<(Biblioteca.Models.Usuario Usuario, int TotalPrestamos)>)ViewBag.UsuariosMasActivos).Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var item in (IEnumerable<(Usuario Usuario, int TotalPrestamos)>)ViewBag.UsuariosMasActivos)
                            {
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div>
                                        <h6 class="mb-0">@item.Usuario.Nombre</h6>
                                        <small class="text-muted">por @item.Usuario.Email</small>
                                    </div>
                                    <span class="badge bg-primary">@item.TotalPrestamos préstamos</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-users fa-2x text-muted mb-2"></i>
                            <p class="text-muted">No hay usuarios activos aún</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (ViewBag.PrestamosProximosVencer != null && ((List<Biblioteca.Models.Prestamo>)ViewBag.PrestamosProximosVencer).Any())
    {
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="card shadow">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="mb-0">
                            <i class="fas fa-clock"></i> Préstamos Próximos a Vencer (3 días)
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Usuario</th>
                                        <th>Libro</th>
                                        <th>Autor</th>
                                        <th>Fecha Vencimiento</th>
                                        <th>Días Restantes</th>
                                        <th class="text-center">Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var prestamo in (List<Biblioteca.Models.Prestamo>)ViewBag.PrestamosProximosVencer)
                                    {
                                        var diasRestantes = (prestamo.FechaDevolucionEsperada - DateTime.Now).Days;
                                        <tr>
                                            <td>
                                                <strong>@prestamo.Usuario?.Nombre</strong>
                                                <br>
                                                <small class="text-muted">@prestamo.Usuario?.Email</small>
                                            </td>
                                            <td>@prestamo.Libro?.Titulo</td>
                                            <td>@prestamo.Libro?.Autor?.Nombre</td>
                                            <td>
                                                <span class="badge bg-warning text-dark">
                                                    @prestamo.FechaDevolucionEsperada.ToString("dd/MM/yyyy")
                                                </span>
                                            </td>
                                            <td>
                                                @if (diasRestantes <= 0)
                                                {
                                                    <span class="badge bg-danger">¡Vencido!</span>
                                                }
                                                else if (diasRestantes == 1)
                                                {
                                                    <span class="badge bg-warning text-dark">Mañana</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-info">@diasRestantes días</span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <a asp-controller="Prestamos" asp-action="Details" asp-route-id="@prestamo.PrestamoId" 
                                                   class="btn btn-sm btn-outline-primary" title="Ver Detalles">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-bolt"></i> Accesos Rápidos
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <a asp-controller="Libros" asp-action="Create" class="btn btn-outline-primary btn-lg w-100 mb-2">
                                <i class="fas fa-plus-circle d-block fa-2x mb-2"></i>
                                Registrar Nuevo Libro
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a asp-controller="Usuarios" asp-action="Create" class="btn btn-outline-success btn-lg w-100 mb-2">
                                <i class="fas fa-user-plus d-block fa-2x mb-2"></i>
                                Registrar Usuario
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a asp-controller="Prestamos" asp-action="Create" class="btn btn-outline-warning btn-lg w-100 mb-2">
                                <i class="fas fa-hand-holding-heart d-block fa-2x mb-2"></i>
                                Nuevo Préstamo
                            </a>
                        </div>
                        <div class="col-md-3">
                            <button type="button" class="btn btn-outline-info btn-lg w-100 mb-2" onclick="actualizarEstadisticas()">
                                <i class="fas fa-sync-alt d-block fa-2x mb-2"></i>
                                Actualizar Estadísticas
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function actualizarEstadisticas() {
            const btn = event.target.closest('button');
            const originalText = btn.innerHTML;
            
            btn.disabled = true;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin d-block fa-2x mb-2"></i>Actualizando...';
            
            try {
                const response = await fetch('@Url.Action("GetEstadisticasJson", "Home")');
                const data = await response.json();
                
                animateCountUp('totalLibros', data.totalLibros);
                animateCountUp('totalUsuarios', data.totalUsuarios);
                animateCountUp('prestamosActivos', data.prestamosActivos);
                animateCountUp('prestamosVencidos', data.prestamosVencidos);
                
                showNotification('Estadísticas actualizadas correctamente', 'success');
                
            } catch (error) {
                console.error('Error:', error);
                showNotification('Error al actualizar las estadísticas', 'danger');
            } finally {
                btn.disabled = false;
                btn.innerHTML = originalText;
            }
        }
        
        function animateCountUp(elementId, targetValue) {
            const element = document.querySelector(`[data-stat="${elementId}"]`);
            if (!element) return;
            
            const startValue = parseInt(element.textContent) || 0;
            const duration = 1000;
            const startTime = performance.now();
            
            function updateCount(currentTime) {
                const elapsed = currentTime - startTime;
                const progress = Math.min(elapsed / duration, 1);
                
                const currentValue = Math.floor(startValue + (targetValue - startValue) * progress);
                element.textContent = currentValue;
                
                if (progress < 1) {
                    requestAnimationFrame(updateCount);
                }
            }
            
            requestAnimationFrame(updateCount);
        }
        
        function showNotification(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alertDiv);
            
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 3000);
        }
        
        setInterval(async () => {
            try {
                const response = await fetch('@Url.Action("GetEstadisticasJson", "Home")');
                const data = await response.json();
                
                const elements = {
                    'totalLibros': data.totalLibros,
                    'totalUsuarios': data.totalUsuarios,
                    'prestamosActivos': data.prestamosActivos,
                    'prestamosVencidos': data.prestamosVencidos
                };
                
                Object.keys(elements).forEach(key => {
                    const element = document.querySelector(`[data-stat="${key}"]`);
                    if (element && element.textContent != elements[key]) {
                        element.textContent = elements[key];
                        element.classList.add('text-warning');
                        setTimeout(() => element.classList.remove('text-warning'), 2000);
                    }
                });
                
            } catch (error) {
                console.log('Auto-actualización falló:', error);
            }
        }, 30000);
        
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px)';
                    this.style.transition = 'transform 0.3s ease';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });
        });
    </script>
}

<style>
    .card {
        border: none;
        border-radius: 15px;
        transition: all 0.3s ease;
    }
    
    .card:hover {
        box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
    }
    
    .bg-primary {
        background: linear-gradient(45deg, #007bff, #0056b3) !important;
    }
    
    .bg-success {
        background: linear-gradient(45deg, #28a745, #1e7e34) !important;
    }
    
    .bg-warning {
        background: linear-gradient(45deg, #ffc107, #e0a800) !important;
    }
    
    .bg-danger {
        background: linear-gradient(45deg, #dc3545, #c82333) !important;
    }
    
    .bg-info {
        background: linear-gradient(45deg, #17a2b8, #117a8b) !important;
    }
    
    .bg-secondary {
        background: linear-gradient(45deg, #6c757d, #545b62) !important;
    }
    
    .list-group-item {
        transition: all 0.3s ease;
    }
    
    .list-group-item:hover {
        background-color: #f8f9fa;
        transform: translateX(5px);
    }
    
    .btn-outline-primary:hover,
    .btn-outline-success:hover,
    .btn-outline-warning:hover,
    .btn-outline-info:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        color: white;
    }
    
    @@keyframes pulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }
    }
    
    .text-warning {
        animation: pulse 0.5s ease-in-out;
    }
</style>